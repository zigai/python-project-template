_templates_suffix: .jinja
_envops:
    autoescape: false

_jinja_extensions:
    - copier_templates_extensions.TemplateExtensionLoader
    - extensions.py:GitDefaultsExtension
    - extensions.py:PythonVersionExtension
    - extensions.py:CurrentYearExtension

_subdirectory: "template"

_templates:
    - path: LICENSE.jinja
      when: "{{ license != 'None' }}"
    - path: .github/workflows/tests.yml.jinja
      when: "{{ 'tests' in github_actions }}"
    - path: .github/workflows/lint.yml.jinja
      when: "{{ 'lint' in github_actions }}"
    - path: .github/workflows/publish.yml.jinja
      when: "{{ 'publish' in github_actions }}"

package_name:
    type: str
    help: Python package name (must be a valid identifier)
    placeholder: my_package

repo_name:
    type: str
    help: Repository name (typically package name with dashes)
    default: "{{ package_name | replace('_', '-') }}"

author_name:
    type: str
    help: Author name
    default: "{{ git_user_name }}"

author_email:
    type: str
    help: Author email address
    default: "{{ git_user_email }}"

description:
    type: str
    help: Project description
    placeholder: ""

repository_url:
    type: str
    help: GitHub repository URL
    default: "https://github.com/{{ github_username }}/{{ repo_name }}"

python_min_version:
    type: str
    help: Minimum supported Python version
    default: "3.10"
    choices:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        - "3.14"

python_max_version:
    type: str
    help: Maximum supported Python version
    default: "3.13"
    choices:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        - "3.14"

python_default_version:
    type: str
    help: Default Python version for development
    default: "3.12"
    choices:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        - "3.14"

copyright_license:
    type: str
    help: Your project's license
    default: None
    choices:
        No license: None
        MIT License: MIT
        Apache License 2.0: Apache-2.0
        GNU General Public License v3.0 only: GPL-3.0
        BSD 3-Clause "New" or "Revised" License: BSD-3-Clause
        The Unlicense: Unlicense
        zlib License: Zlib
        Academic Free License v3.0: AFL-3.0
        Artistic License 2.0: Artistic-2.0
        BSD 2-Clause "Simplified" License: BSD-2-Clause
        BSD 3-Clause Clear License: BSD-3-Clause-Clear
        Boost Software License 1.0: BSL-1.0
        Creative Commons Attribution 4.0 International: CC-BY-4.0
        Creative Commons Attribution Share Alike 4.0 International: CC-BY-SA-4.0
        Creative Commons Zero v1.0 Universal: CC0-1.0
        Do What The F*ck You Want To Public License: WTFPL
        Educational Community License v2.0: ECL-2.0
        Eclipse Public License 1.0: EPL-1.0
        Eclipse Public License 2.0: EPL-2.0
        European Union Public License 1.1: EUPL-1.1
        European Union Public License 1.2: EUPL-1.2
        GNU Affero General Public License v3.0: AGPL-3.0
        GNU General Public License v2.0 only: GPL-2.0
        GNU Lesser General Public License v2.1 only: LGPL-2.1
        GNU Lesser General Public License v3.0 only: LGPL-3.0
        ISC License: ISC
        LaTeX Project Public License v1.3c: LPPL-1.3c
        Mozilla Public License 2.0: MPL-2.0
        Microsoft Public License: MS-PL
        Microsoft Reciprocal License: MS-RL
        University of Illinois/NCSA Open Source License: NCSA
        SIL Open Font License 1.1: OFL-1.1
        Open Software License 3.0: OSL-3.0
        PostgreSQL License: PostgreSQL

github_actions:
    type: str
    help: Which GitHub Actions to include? (multiple selection allowed)
    multiselect: true
    choices:
        Tests: tests
        Lint: lint
        Publish to PyPI: publish
    default: [tests, lint]

readme_badges:
    type: bool
    help: Add badges to the README?
    default: true
_tasks:
    - '{% if copyright_license == ''None'' %}python -c "import os; os.remove(''LICENSE'') if os.path.exists(''LICENSE'') else None"{% endif %}'
